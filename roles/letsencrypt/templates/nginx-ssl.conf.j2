# Configuración SSL completa para {{ domain }}
# Generado por Ansible - Role: letsencrypt
# Configuración optimizada para seguridad A+ en SSL Labs

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name {{ domain }};
    
    # ACME challenge support for renewals
    location /.well-known/acme-challenge/ {
        root {{ letsencrypt.webroot_path }};
        try_files $uri =404;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name {{ domain }};
    
    # Root directory and index
    root {{ letsencrypt.webroot_path }};
    index index.html index.htm;
    
    # SSL Configuration
    ssl_certificate {{ letsencrypt.config_dir }}/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key {{ letsencrypt.config_dir }}/live/{{ domain }}/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols {{ letsencrypt.ssl_protocols }};
    ssl_ciphers {{ letsencrypt.ssl_ciphers }};
    ssl_prefer_server_ciphers {{ letsencrypt.ssl_prefer_server_ciphers }};
    
    # DH Parameters for Perfect Forward Secrecy
    ssl_dhparam /etc/nginx/dhparam.pem;
    
    # SSL optimizations
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate {{ letsencrypt.config_dir }}/live/{{ domain }}/chain.pem;
    
    # Security Headers
    {% if letsencrypt.security_headers.hsts_max_age %}
    add_header Strict-Transport-Security "max-age={{ letsencrypt.security_headers.hsts_max_age }}{% if letsencrypt.security_headers.hsts_include_subdomains %}; includeSubDomains{% endif %}{% if letsencrypt.security_headers.hsts_preload %}; preload{% endif %}" always;
    {% endif %}
    
    {% if letsencrypt.security_headers.content_type_nosniff %}
    add_header X-Content-Type-Options "nosniff" always;
    {% endif %}
    
    {% if letsencrypt.security_headers.frame_deny %}
    add_header X-Frame-Options "DENY" always;
    {% endif %}
    
    {% if letsencrypt.security_headers.xss_protection %}
    add_header X-XSS-Protection "1; mode=block" always;
    {% endif %}
    
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy (básica)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;
    
    # Main location
    location / {
        try_files $uri $uri/ =404;
        
        # Add server identification
        add_header X-Server-Info "{{ server_name | default(ansible_hostname) }}" always;
        add_header X-Powered-By "Infra-Made-Easy" always;
    }
    
    # Security.txt (RFC 9116)
    location /.well-known/security.txt {
        return 200 "Contact: mailto:{{ letsencrypt.email }}\nExpires: 2025-12-31T23:59:59.000Z\nPreferred-Languages: es, en\nCanonical: https://{{ domain }}/.well-known/security.txt\n";
        add_header Content-Type text/plain;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Metrics endpoint for Prometheus (nginx-exporter)
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        # Allow monitoring server
        {% for host in groups['monitoring_servers'] | default([]) %}
        {% if hostvars[host]['ansible_default_ipv4'] is defined %}
        allow {{ hostvars[host]['ansible_default_ipv4']['address'] }};
        {% endif %}
        {% endfor %}
        deny all;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to backup files
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Logging
    access_log /var/log/nginx/{{ domain }}-access.log;
    error_log /var/log/nginx/{{ domain }}-error.log;
}
